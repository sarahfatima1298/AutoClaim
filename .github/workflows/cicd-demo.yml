name: cicd

env:
    repository: "${{ github.repository }}"
    run_id: "${{ github.run_number }}"
    job: "${{ github.job }}"
    commits: '[{"commitId": "${{ github.sha }}" }]'
    
on:
  push:
    branches: ['feature/workflows']
  pull_request:
    branches: ['master']
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          repository: velivalab/sonar-github-action
          ref: v1.0.0
          token: ${{ secrets.GHP_TOKEN }}
          path: ./.github/actions/sonar-github-action

      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Setup JDK 11 for Sonar Cloud
        uses: actions/setup-java@v1
        with:
            java-version: 11
          
      - name: Maven Build
        run: mvn clean install -DskipTests=true
      
      - name: Run JUnit Tests
        run: mvn test -Dmaven.test.failure.ignore=true surefire-report:report
        
      - name: Sonar Cloud Analysis
        if: success() # always() failure() success()
        run: >
            mvn -B verify -DskipTests sonar:sonar
            -Dsonar.projectKey=$SONAR_PROJECT_KEY
            -Dsonar.organization=$SONAR_ORG_KEY
            -Dsonar.host.url=$SONAR_URL
            -Dsonar.login=$SONAR_TOKEN
        env:
            GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
            SONAR_URL: ${{ secrets.SONAR_URL }}
            SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
            
        
      - name: Sonar Action
        uses: ./.github/actions/sonar-github-action/sonar-github-action
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-pass: ${{ secrets.SN_DEVOPS_PASSWD }}
          instance-name: ${{ secrets.SN_INSTANCE_NAME }}
          tool-id: ${{ secrets.SN_ORCH_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          sonar-host-url: ${{ secrets.SONAR_HOST }}
          sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}
          
          
  integrationTest:
    needs: build
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - run: echo Run integration tests.
      
  deploy:
    needs: integrationTest
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - run: echo Run deployment.
